#include<stdio.h>
#include<stdlib.h>

struct stack
{
    int size;
    int top;
    int *arr;
};

int isEmpty(struct stack *s)
{
    if (s->top==-1)
        return 1;
    else
        return 0;
}

int isFull(struct stack *s)
{
    if (s->top==s->size-1)
        return 1;
    else
        return 0;
}

void Push(struct stack* s)
{
    if(isFull(s)==1)
    {
        printf("Stack overflow!");
    }
    else 
    {
        s->top++;
        printf("Enter the new stack element:");
        scanf("%d",&s->arr[s->top]);
        printf("New Element added \nNew Top Location:%2d",s->top);
    }
}

void Pop(struct stack* s)
{
    if(isEmpty(s)==1)
    {
        printf("Stack underflow!");
    }
    else 
    {
        printf("The Element at %d location is deleted",s->arr[s->top]);
        s->top--;
    }
}

int Peek(struct stack* s)
{
    return s->arr[s->top];
}

void Display(struct stack* s)
{
    int i;
    for (i=0; i<=s->top; i++)
    {
        printf("%d\t",s->arr[i]);
    }
}

int main()
{
    struct stack* s = (struct stack*)malloc(sizeof(struct stack));
    int i=0,menu, x;
    printf("Enter the size of stack: ");
    scanf("%d",&s->size);
    s->top = -1;
    s->arr = (int *)malloc((s->size)*(sizeof(int)));
    
    while (i==0)
    {
        printf("\n******MENU******\n1. Push\n2. Pop\n3. Peek\n4. Display\n5. Exit\n\n");
        scanf("%d",&menu);
        switch (menu)
        {
            case 1:
                Push(s);
                break;
            case 2:
                Pop(s);
                break;
            case 3:
                x = Peek(s);
		    printf("Element at top: %d", x);
                break;
            case 4:
                Display(s);
                break;
            case 5:
                printf("\nExiting......");
                i = 1;
                printf("Rounak Katiyar\nBatch: S13\nRoll no: 47");
                break;
        }
    }
    return 0;
}
